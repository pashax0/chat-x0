{"version":3,"sources":["components/LoginForm.js","components/LoginButton.js","components/Head.js","components/Body.js","components/MessageForm.js","components/Foot.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","value","target","handleSubmit","ev","onLogin","state","preventDefault","_this2","react_default","a","createElement","className","onSubmit","type","onChange","Component","LoginButton","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","Fragment","onClick","Modal","disableAutoFocus","aria-labelledby","aria-describedby","onClose","LoginForm","Head","from","onLogout","user","Messages","lazy","Promise","resolve","setTimeout","__webpack_require__","e","then","bind","Body","isActiveWindow","wsStatus","ws","msgs","scrollTop","scrolling","addToMsg","react","fallback","react_loader_spinner_default","color","MessageForm","onSendMsg","msgTempl","Foot","components_MessageForm","Date","getFullYear","App","handleLogout","localStorage","removeItem","handleLogin","name","setItem","handleScroll","fromTop","scrollHeight","handleSendMsg","text","msg","message","send","JSON","stringify","localMsgs","parse","getItem","push","handleAddToMsgFor","to","concat","handleAddToMsgText","online","handleInternetStatus","handleWindowStatus","connectWs","prevProps","prevState","clearInterval","timer","setInterval","_this3","navigator","onLine","window","addEventListener","_this4","_this5","WebSocket","onopen","readyState","onerror","console","log","onclose","code","onmessage","reverseData","data","reverse","toConsumableArray","Notification","permission","requestPermission","result","alert","_this$state","components_Head","components_Body","components_Foot","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39e9cc76.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport '../styles/login-form.scss';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: ''\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit = (ev) => {\r\n    this.props.onLogin(this.state.value);\r\n    ev.preventDefault();\r\n    this.setState({value: ''});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"login-form\"\r\n      >\r\n        <h1>Hello!</h1>\r\n        <form onSubmit={(ev) => this.handleSubmit(ev)}>\r\n          <label>\r\n            <p>Nickname:</p>\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"ok\" />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport LoginForm from './LoginForm';\r\n\r\nexport default function LoginButton(props) {\r\n  const { onLogin } = props;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        login\r\n      </button>\r\n      <Modal\r\n        className=\"modal\"\r\n        disableAutoFocus={true}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <LoginForm\r\n          onLogin={onLogin}\r\n        />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\n\nimport LoginButton from './LoginButton';\n\nfunction Head(props) {\n  const { from, onLogout, onLogin } = props;\n  const user = from ? from : 'Stranger';\n  return (\n    <header>\n      <h1>{user}, welcome to chat</h1>\n      {from ? <button onClick={() => onLogout()}>logout</button>\n      : <LoginButton\n        onLogin={onLogin}\n      />}\n    </header>\n  )\n}\n\nexport default Head;\n","import React, { lazy, Suspense } from 'react';\nimport Spinner from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport '../styles/body.css'\nconst Messages = lazy(() => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(import(\"./Messages\")), 2000);\n  });\n});\n\n\nfunction Body(props) {\n  const { isActiveWindow, wsStatus, from, ws, msgs, scrollTop, scrolling, addToMsg } = props;\n  return (\n    <main>\n      {(wsStatus === 1) ? \n        <Suspense fallback={<Spinner\n          className=\"spiner\"\n          type=\"Triangle\"\n          color=\"#000\"\n        />}>\n          <Messages\n            isActiveWindow={isActiveWindow}\n            wsStatus={wsStatus}\n            ws={ws}\n            from={from}\n            msgs={msgs}\n            scrollTop={scrollTop}\n            scrolling={scrolling}\n            addToMsg={addToMsg}\n          />\n        </Suspense>\n        : <div className=\"error\">\n          <p>Error with connection!</p>\n        </div>\n      }\n    </main>\n  )\n}\n\nexport default Body;\n","import React, { Component } from 'react';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleChange = (event) => {\n    // this.setState({value: event.target.value});\n  }\n\n  handleSubmit = (ev) => {\n    this.props.onSendMsg();\n    ev.preventDefault();\n    this.setState({value: ''});\n  }\n\n  render() {\n    return (\n      <>\n        <form className=\"mess-form\" onSubmit={(ev) => this.handleSubmit(ev)}>\n          <label>\n            {/* <div>Message:</div> */}\n            <textarea type=\"text\"\n              value={this.props.msgTempl}\n              onChange={ev => this.props.addToMsg(ev.target.value)}\n            />\n          </label>\n          <input type=\"submit\" value=\"Send\" />\n        </form>\n      </>\n    )\n  }\n}\n\nexport default MessageForm;\n","import React from 'react';\n\nimport MessageForm from './MessageForm';\nimport LoginButton from './LoginButton';\n\nfunction Foot(props) {\n  const { onLogin, from, onSendMsg, msgTempl, addToMsg } = props;\n\n  return (\n    <footer>\n      {from ? <MessageForm\n          onSendMsg={onSendMsg}\n          from={from}\n          msgTempl={msgTempl}\n          addToMsg={addToMsg}\n        />\n        : <div\n          className=\"login-attent\"\n        >\n          <h1>For commenting, please, login!</h1>\n          <LoginButton\n            onLogin={onLogin}\n          />\n        </div>\n      }\n      <small className=\"copyright\">© pashax0 {new Date().getFullYear()}</small>\n    </footer>\n  )\n}\n\nexport default Foot;\n","import React, { Component } from 'react';\n\n// import Ws from './services/websocket';\nimport Head from './components/Head';\nimport Body from './components/Body';\nimport Foot from './components/Foot';\nimport './styles/reset.css';\nimport './styles/app.scss';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    // localStorage.clear();\n    const from = localStorage.getItem('from') ? localStorage.getItem('from') : false;\n    \n    this.state = {\n      online: null,\n      isActiveWindow: true,\n      wsStatus: null,\n      from: from,\n      msgs: null,\n      scrollTop: 500,\n      msgTempl: '',\n    }\n  }\n\n  componentDidMount() {\n    this.handleInternetStatus();\n    this.handleWindowStatus();\n    this.connectWs();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    clearInterval(this.timer);\n\n    if (this.state.wsStatus !== prevState.wsStatus) {\n      this.setState({\n        msgs: [],\n      })\n    }\n\n    if (this.state.wsStatus !== 1) {\n      this.timer = setInterval(() => this.connectWs(), 10000);\n    }\n  }\n\n  handleInternetStatus() {\n    this.setState({online: navigator.onLine,})\n    window.addEventListener(\"offline\", () => this.setState({online: false, wsStatus: 'offline'}))\n    window.addEventListener(\"online\", () => this.setState({online: true,}))\n  }\n\n  handleWindowStatus() {\n    window.addEventListener(\"focus\", () => (\n      this.setState({\n        isActiveWindow: true,\n      })\n    ))\n    window.addEventListener(\"blur\", () => (\n      this.setState({\n        isActiveWindow: false,\n      })\n    ))\n  }\n\n  connectWs() {\n    this.ws = new WebSocket('wss://wssproxy.herokuapp.com/');\n    \n    this.ws.onopen = () => {\n      this.setState({\n        wsStatus: this.ws.readyState,\n      })\n    };\n\n    this.ws.onerror = () => {\n      console.log(`Connection error`);\n    };\n\n    this.ws.onclose = (ev) => {\n      this.setState({\n        wsStatus: ev.code,\n      })\n    };\n\n    this.ws.onmessage = (msg) => {\n      this.setState((state) => {\n        const reverseData = JSON.parse(msg.data).reverse();\n        return {\n          msgs: [...state.msgs, ...reverseData],\n        }\n      })\n    };\n  }\n\n  setNotification() {\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser does not support desktop notification\");\n    } else {\n      if (Notification.permission === 'default') {\n        Notification.requestPermission()\n          .then(result => {\n            result === 'granted'\n            ? alert(`Thank, you!`)\n            : alert('If you change your mind, please - click this button!');\n          })\n      }\n    }\n  }\n\n handleLogout = () => {\n    localStorage.removeItem('from');\n    localStorage.removeItem('notif');\n    this.setState({\n      from: false,\n    })\n  }\n\n  handleLogin = (name) => {\n    localStorage.setItem('from', name);\n    this.setState({\n      from: name,\n    })\n  }\n\n  handleScroll = (ev) => {\n    const fromTop = ev.target.scrollHeight;\n    this.setState({\n      scrollTop: fromTop,\n    })\n  }\n\n  handleSendMsg = () => {\n    const text = this.state.msgTempl;\n    if (this.state.wsStatus === 1) {\n      const msg = {\n        from: this.state.from,\n        message: text,\n      };\n      this.ws.send(JSON.stringify(msg));\n    } else {\n      let localMsgs = JSON.parse(localStorage.getItem('msgs')) || [];\n      localMsgs.push(text);\n      localStorage.setItem('msgs', JSON.stringify(localMsgs));\n    }\n    this.setState({\n      msgTempl: '',\n    })\n  }\n\n  handleAddToMsgFor = (to) => {\n    this.setState((state) => {\n      const msgFor = state.msgTempl.concat(`@${to} `);\n      return {\n        msgTempl: msgFor,\n      }\n    })\n  }\n\n  handleAddToMsgText = (text) => {\n    this.setState({\n      msgTempl: text,\n    })\n  }\n\n  // handleGetMsg = (msg) => {\n  //   this.setState((state) => {\n  //     const reverseData = JSON.parse(msg.data).reverse();\n  //     return {\n  //       msgs: [...state.msgs, ...reverseData],\n  //     }\n  //   })\n  // }\n\n  render() {\n    const { isActiveWindow, wsStatus, from, msgs, scrollTop, msgTempl } = this.state;\n    return (\n      <>\n        <Head\n          from={from}\n          onLogout={this.handleLogout}\n          onLogin={this.handleLogin}\n        />\n        <Body\n          isActiveWindow={isActiveWindow}\n          wsStatus={wsStatus}\n          from={from}\n          msgs={msgs}\n          scrollTop={scrollTop}\n          scrolling={this.handleScroll}\n          addToMsg={this.handleAddToMsgFor}\n        />\n        <Foot\n          onLogin={this.handleLogin}\n          from={from}\n          msgTempl={msgTempl}\n          onSendMsg={this.handleSendMsg}\n          addToMsg={this.handleAddToMsgText}\n        />\n        \n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}