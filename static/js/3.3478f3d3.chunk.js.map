{"version":3,"sources":["components/Messages.js"],"names":["Messages","props","_this","Object","d_study_rsschool2019q1_chat_x0_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","d_study_rsschool2019q1_chat_x0_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","d_study_rsschool2019q1_chat_x0_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handlePopoverOpen","id","setState","anchorEl","handlePopoverClose","handleAddToMessage","to","addToMsg","posFromTop","localStorage","getItem","state","showLoader","listRef","React","createRef","_this2","scrolling","window","onbeforeunload","setItem","onunload","prevProps","wsStatus","msgs","Notification","permission","length","isActiveWindow","notifText","message","body","height","refs","list","scrollTo","target","scrollTop","_this3","_this$props","from","regLink","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","ref","onScroll","ev","handleScrolling","map","msg","concat","key","onMouseEnter","onMouseLeave","onClick","Date","time","toLocaleString","dangerouslySetInnerHTML","__html","replace","Component"],"mappings":"4KAIMA,qBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA4DRQ,kBAAoB,SAACC,GACnBR,EAAKS,SAAS,CAACC,SAAUF,KA9DRR,EAiEnBW,mBAAqB,WACnBX,EAAKS,SAAS,CAACC,SAAU,QAlERV,EAqEnBY,mBAAqB,SAACC,GACpBb,EAAKD,MAAMe,SAASD,IAnEpB,IAAME,EAAaC,aAAaC,QAAQ,QAAUD,aAAaC,QAAQ,OAAS,EAH/D,OAKjBjB,EAAKkB,MAAQ,CACXC,YAAY,EACZT,SAAU,KACVK,WAAYA,GAGdf,EAAKoB,QAAUC,IAAMC,YAXJtB,mFAwBC,IAAAuB,EAAApB,KACdA,KAAKe,MAAMH,YACbZ,KAAKqB,UAAUrB,KAAKe,MAAMH,YAE5BU,OAAOC,eAAiB,kBAAMV,aAAaW,QAAQ,MAAOJ,EAAKL,MAAMH,aACrEU,OAAOG,SAAW,kBAAMZ,aAAaW,QAAQ,MAAOJ,EAAKL,MAAMH,4DAI/DC,aAAaW,QAAQ,MAAOxB,KAAKe,MAAMH,uDAGtBc,GACb1B,KAAKJ,MAAM+B,WAAaD,EAAUC,UAAY3B,KAAKe,MAAMH,YAC3DZ,KAAKqB,UAAUrB,KAAKe,MAAMH,YAFA,IAKpBgB,EAAS5B,KAAKJ,MAAdgC,KACR,GAAgC,YAA5BC,aAAaC,YACZJ,EAAUE,KAAKG,SAAWH,EAAKG,SAC9B/B,KAAKJ,MAAMoC,eAAgB,CAC/B,IAAMC,EAAYL,EAAKA,EAAKG,OAAS,GAAGG,QACxC,IAAIL,aAAa,UAAU,CAACM,KAAMF,uCAI5BG,GACSpC,KAAKqC,KAAKC,KAClBC,SAAS,EAAGH,2CAGPI,GACdxC,KAAKM,SAAS,CACZM,YAAa4B,EAAOC,6CAgBf,IAAAC,EAAA1C,KAAA2C,EAEgB3C,KAAKJ,MAApBgC,EAFDe,EAECf,KAAMgB,EAFPD,EAEOC,KACRC,EAAU,4FAEd,OACEC,EAAAC,EAAAC,cAAA,MACEC,UAAU,WACVC,IAAI,OACJC,SAAU,SAACC,GAAD,OAAQV,EAAKW,gBAAgBD,EAAGZ,UAEzCZ,EAAK0B,IAAI,SAAAC,GAAG,OACXT,EAAAC,EAAAC,cAAA,MACEC,UAAS,iBAAAO,OAAmBZ,IAASW,EAAIX,KAAO,MAAQ,IACxDa,IAAKF,EAAIlD,IAETyC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVS,aAAc,kBAAMhB,EAAKtC,kBAAkBmD,EAAIlD,KAC/CsD,aAAcjB,EAAKlC,oBAElB+C,EAAIX,KACJF,EAAK3B,MAAMR,WAAagD,EAAIlD,GACzByC,EAAAC,EAAAC,cAAA,OACAC,UAAU,UACVW,QAAS,kBAAMlB,EAAKjC,mBAAmB8C,EAAIX,QAF3C,mBAIiBW,EAAIX,MAErB,MAENE,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACT,IAAIY,KAAKN,EAAIO,MAAOC,mBAEzBjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWe,wBAAyB,CAACC,OAAM,GAAAT,OAAKD,EAAIrB,QAAQgC,QAAQrB,EAApB,yEA9GpDsB,cAuHRxE","file":"static/js/3.3478f3d3.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport '../styles/messages.scss';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    const posFromTop = localStorage.getItem('top') ? +localStorage.getItem('top') : 0;\n\n    this.state = {\n      showLoader: false,\n      anchorEl: null,\n      posFromTop: posFromTop,\n      // msgs: [],\n    }\n    this.listRef = React.createRef();\n  }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   // Добавляются ли в список новые элементы?\n  //   // Запоминаем значение прокрутки, чтобы использовать его позже.\n  //   if (prevProps.list.length < this.props.list.length) {\n  //     const list = this.listRef.current;\n  //     return list.scrollHeight - list.scrollTop;\n  //   }\n  //   return null;\n  // }\n\n  componentDidMount() {\n    if (this.state.posFromTop) {\n      this.scrolling(this.state.posFromTop);\n    }\n    window.onbeforeunload = () => localStorage.setItem('top', this.state.posFromTop);\n    window.onunload = () => localStorage.setItem('top', this.state.posFromTop);\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem('top', this.state.posFromTop);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.wsStatus !== prevProps.wsStatus && this.state.posFromTop) {\n      this.scrolling(this.state.posFromTop);\n    }\n\n    const { msgs } = this.props;\n    if (Notification.permission === 'granted'\n      && prevProps.msgs.length !== msgs.length\n      && !this.props.isActiveWindow) {\n      const notifText = msgs[msgs.length - 1].message;\n      new Notification('Chat-x0',{body: notifText});\n    }\n  }\n\n  scrolling(height) {\n    const msgsList = this.refs.list;\n    msgsList.scrollTo(0, height);\n  }\n\n  handleScrolling(target) {\n    this.setState({\n      posFromTop: +target.scrollTop,\n    })\n  }\n\n  handlePopoverOpen = (id) => {\n    this.setState({anchorEl: id});\n  }\n\n  handlePopoverClose = () => {\n    this.setState({anchorEl: null});\n  }\n\n  handleAddToMessage = (to) => {\n    this.props.addToMsg(to);\n  }\n\n  render() {\n    // const { msgs } = this.state;\n    const { msgs, from } = this.props;\n    const regLink = /(http|ftp|https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?/gi;\n    // if(this.state.showLoader) {\n      return (\n        <ul\n          className=\"messages\"\n          ref=\"list\"\n          onScroll={(ev) => this.handleScrolling(ev.target)}\n        >\n          {msgs.map(msg =>\n            <li\n              className={`msg-container ${from === msg.from ? 'own' : ''}`}\n              key={msg.id}\n            >\n              <div className=\"msg-info\">\n                <div\n                  className=\"msg-author\"\n                  onMouseEnter={() => this.handlePopoverOpen(msg.id)}\n                  onMouseLeave={this.handlePopoverClose}\n                >\n                  {msg.from}\n                  {this.state.anchorEl === msg.id\n                    ? <div\n                      className=\"popover\"\n                      onClick={() => this.handleAddToMessage(msg.from)}\n                    >\n                      Send message to {msg.from}\n                    </div>\n                    : null}\n                </div>\n                <div\n                  className=\"msg-date\"\n                >{(new Date(msg.time)).toLocaleString()}</div>\n              </div>\n              <p className=\"msg-text\" dangerouslySetInnerHTML={{__html: `${msg.message.replace(regLink, `<a class=\"ext-link\" href=\"$&\" target=\"_blank\">link</a>`)}`}}></p>\n            </li>\n          )}\n        </ul>\n      )\n    // }\n  }\n}\n\nexport default Messages;\n"],"sourceRoot":""}